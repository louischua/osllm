name: Deploy to Hugging Face Space

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  # Pre-deployment validation
  validate-deployment:
    name: üîç Validate Deployment Files
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Validate required files
      run: |
        echo "üîç Validating files for deployment..."
        
        # Required files for Space deployment
        required_files=(
          "app.py"
          "requirements.txt"
        )
        
        # Optional files (warn if missing)
        optional_files=(
          "space_auth_test.py"
          "openllm_training_with_auth.py"
          "integrate_auth_into_training.py"
          "setup_hf_space_auth.py"
          "verify_space_auth.py"
        )
        
        missing_required=()
        missing_optional=()
        
        for file in "${required_files[@]}"; do
          if [ ! -f "$file" ]; then
            missing_required+=("$file")
          else
            echo "‚úÖ $file found"
          fi
        done
        
        for file in "${optional_files[@]}"; do
          if [ ! -f "$file" ]; then
            missing_optional+=("$file")
          else
            echo "‚úÖ $file found"
          fi
        done
        
        if [ ${#missing_required[@]} -ne 0 ]; then
          echo "‚ùå Missing required files:"
          printf '  - %s\n' "${missing_required[@]}"
          exit 1
        fi
        
        if [ ${#missing_optional[@]} -ne 0 ]; then
          echo "‚ö†Ô∏è Missing optional files:"
          printf '  - %s\n' "${missing_optional[@]}"
        fi
        
        echo "‚úÖ All required files present"
        
    - name: Validate file contents
      run: |
        echo "üîç Validating file contents..."
        
        # Debug: Show current directory and files
        echo "Current directory: $(pwd)"
        echo "Files in current directory:"
        ls -la
        
        # Check if files have content
        for file in app.py requirements.txt; do
          if [ ! -f "$file" ]; then
            echo "‚ùå $file not found"
            exit 1
          elif [ ! -s "$file" ]; then
            echo "‚ùå $file is empty"
            exit 1
          else
            echo "‚úÖ $file has content ($(wc -c < "$file") bytes)"
          fi
        done
        
        # Simple Python syntax check
        echo "üîç Validating Python syntax..."
        python --version
        
        # Use a simpler approach - just try to import the files
        python -c "import app"
        
        # Check optional files if they exist
        if [ -f "space_auth_test.py" ]; then
          python -c "import space_auth_test"
        fi
        
        if [ -f "openllm_training_with_auth.py" ]; then
          python -c "import openllm_training_with_auth"
        fi
        
        echo "‚úÖ File validation completed"

  deploy-to-space:
    name: üöÄ Deploy to Space
    runs-on: ubuntu-latest
    needs: [validate-deployment]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Pin exact version for reproducible builds
        pip install huggingface_hub==0.19.0
        
    - name: Deploy files to Space
      env:
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
        SPACE_ID: ${{ secrets.SPACE_ID }}
      run: |
        echo "üöÄ Deploying to Hugging Face Space..."
        
        # Function to deploy a file
        deploy_file() {
          local file_path="$1"
          local space_path="$2"
          
          if [ ! -f "$file_path" ]; then
            echo "‚ö†Ô∏è File not found: $file_path"
            return 1
          fi
          
          echo "üì§ Deploying $file_path to $space_path"
          
          # Use huggingface_hub to upload file
          python -c "
        import os
        from huggingface_hub import HfApi
        
        api = HfApi()
        token = os.environ.get('HF_TOKEN')
        space_id = os.environ.get('SPACE_ID')
        
        if not token:
            print('‚ùå HF_TOKEN not found')
            exit(1)
            
        if not space_id:
            print('‚ùå SPACE_ID not found')
            exit(1)
            
        try:
            # Upload file to space
            api.upload_file(
                path_or_fileobj='$file_path',
                path_in_repo='$space_path',
                repo_id=space_id,
                repo_type='space',
                token=token
            )
            print(f'‚úÖ Successfully uploaded $file_path to $space_path')
        except Exception as e:
            print(f'‚ùå Failed to upload $file_path: {e}')
            exit(1)
        "
        }
        
        # Deploy core files
        deploy_file "app.py" "app.py"
        deploy_file "requirements.txt" "requirements.txt"
        
        # Deploy optional files if they exist
        if [ -f "space_auth_test.py" ]; then
          deploy_file "space_auth_test.py" "space_auth_test.py"
        fi
        
        if [ -f "openllm_training_with_auth.py" ]; then
          deploy_file "openllm_training_with_auth.py" "openllm_training_with_auth.py"
        fi
        
        if [ -f "integrate_auth_into_training.py" ]; then
          deploy_file "integrate_auth_into_training.py" "integrate_auth_into_training.py"
        fi
        
        if [ -f "setup_hf_space_auth.py" ]; then
          deploy_file "setup_hf_space_auth.py" "setup_hf_space_auth.py"
        fi
        
        if [ -f "verify_space_auth.py" ]; then
          deploy_file "verify_space_auth.py" "verify_space_auth.py"
        fi
        
        echo "‚úÖ Deployment completed"
        
    - name: Verify deployment
      env:
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
        SPACE_ID: ${{ secrets.SPACE_ID }}
      run: |
        echo "üîç Verifying deployment..."
        
        # List deployed files
        python -c "
        import os
        from huggingface_hub import HfApi
        
        api = HfApi()
        token = os.environ.get('HF_TOKEN')
        space_id = os.environ.get('SPACE_ID')
        
        if not token or not space_id:
            print('‚ùå Missing HF_TOKEN or SPACE_ID')
            exit(1)
            
        try:
            # List files in space
            files = api.list_repo_files(space_id, repo_type='space', token=token)
            print('üìÅ Files in space:')
            for file in files:
                print(f'  - {file}')
                
            # Check for required files
            required_files = ['app.py', 'requirements.txt']
            deployed_files = [f for f in files if f in required_files]
            
            if len(deployed_files) == len(required_files):
                print('‚úÖ All required files deployed')
            else:
                print(f'‚ö†Ô∏è Missing files: {set(required_files) - set(deployed_files)}')
                exit(1)
                
        except Exception as e:
            print(f'‚ùå Failed to verify deployment: {e}')
            exit(1)
        "
        
    - name: Rollback on failure
      if: failure()
      env:
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
        SPACE_ID: ${{ secrets.SPACE_ID }}
      run: |
        echo "üîÑ Rolling back deployment due to failure..."
        echo "‚ö†Ô∏è Manual intervention may be required to restore the space"
