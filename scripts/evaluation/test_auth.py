#!/usr/bin/env python3
"""
Test Hugging Face Authentication

This script tests if Hugging Face authentication is working properly
and can create repositories and upload files.

Usage:
    python test_hf_auth.py
"""

import os
import sys
from pathlib import Path

try:
    from huggingface_hub import HfApi, whoami, create_repo, delete_repo
    HF_AVAILABLE = True
except ImportError:
    print("❌ huggingface_hub not installed")
    sys.exit(1)


def test_authentication():
    """Test if authentication is working."""
    print("🔐 Testing Hugging Face Authentication")
    print("-" * 40)
    
    try:
        # Test authentication
        user_info = whoami()
        username = user_info["name"]
        print(f"✅ Authenticated as: {username}")
        
        # Test API access
        api = HfApi()
        print(f"✅ API access working")
        
        return username, api
        
    except Exception as e:
        print(f"❌ Authentication failed: {e}")
        return None, None


def test_repository_creation(username, api):
    """Test repository creation."""
    print(f"\n🧪 Testing Repository Creation")
    print("-" * 40)
    
    try:
        # Create test repository
        repo_name = "test-openllm-auth"
        repo_id = f"{username}/{repo_name}"
        
        print(f"🔄 Creating test repository: {repo_id}")
        create_repo(
            repo_id=repo_id,
            repo_type="model",
            exist_ok=True,
            private=True
        )
        print(f"✅ Repository created successfully")
        
        # Clean up
        print(f"🔄 Cleaning up test repository...")
        delete_repo(repo_id=repo_id, repo_type="model")
        print(f"✅ Repository deleted")
        
        return True
        
    except Exception as e:
        print(f"❌ Repository creation failed: {e}")
        return False


def test_file_upload(username, api):
    """Test file upload."""
    print(f"\n📤 Testing File Upload")
    print("-" * 30)
    
    try:
        # Create test file
        test_file = "test_upload.txt"
        with open(test_file, "w") as f:
            f.write("This is a test file for OpenLLM authentication verification.\n")
            f.write("Generated by test_hf_auth.py\n")
        
        # Create test repository
        repo_name = "test-upload-openllm"
        repo_id = f"{username}/{repo_name}"
        
        create_repo(
            repo_id=repo_id,
            repo_type="model",
            exist_ok=True,
            private=True
        )
        
        # Upload test file
        print(f"🔄 Uploading test file to {repo_id}...")
        api.upload_file(
            path_or_fileobj=test_file,
            path_in_repo="test_file.txt",
            repo_id=repo_id,
            repo_type="model",
            commit_message="Test upload from OpenLLM auth test"
        )
        print(f"✅ File uploaded successfully")
        
        # Clean up
        print(f"🔄 Cleaning up...")
        delete_repo(repo_id=repo_id, repo_type="model")
        os.remove(test_file)
        print(f"✅ Cleanup completed")
        
        return True
        
    except Exception as e:
        print(f"❌ File upload failed: {e}")
        # Clean up test file if it exists
        if os.path.exists("test_upload.txt"):
            os.remove("test_upload.txt")
        return False


def main():
    """Main test function."""
    print("🚀 OpenLLM - Hugging Face Authentication Test")
    print("=" * 50)
    
    # Test authentication
    username, api = test_authentication()
    if not username or not api:
        print("\n❌ Authentication test failed")
        print("Please set up authentication first:")
        print("1. Get a token from https://huggingface.co/settings/tokens")
        print("2. Set environment variable: export HUGGING_FACE_HUB_TOKEN=your_token")
        print("3. Or run: huggingface-cli login")
        sys.exit(1)
    
    # Test repository creation
    repo_success = test_repository_creation(username, api)
    
    # Test file upload
    upload_success = test_file_upload(username, api)
    
    # Summary
    print(f"\n📊 Test Results")
    print("-" * 20)
    print(f"✅ Authentication: PASSED")
    print(f"{'✅' if repo_success else '❌'} Repository Creation: {'PASSED' if repo_success else 'FAILED'}")
    print(f"{'✅' if upload_success else '❌'} File Upload: {'PASSED' if upload_success else 'FAILED'}")
    
    if repo_success and upload_success:
        print(f"\n🎉 All tests passed! You're ready to upload OpenLLM models.")
        print(f"   - Your models will be uploaded to: https://huggingface.co/{username}")
    else:
        print(f"\n⚠️ Some tests failed. Check the error messages above.")
        sys.exit(1)


if __name__ == "__main__":
    main()
